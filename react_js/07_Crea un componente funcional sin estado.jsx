{
    //! Explicaci칩n

    //*  Crea un componente funcional sin estado

    // Los componentes son el n칰cleo de React. Todo en React es un componente y aqu칤 aprender치s a crear uno.

    //? Hay dos maneras de crear un componente React. La primera forma es utilizar una funci칩n JavaScript(Componentes funcionales). Definir un componente de esta manera creara un componente funcional sin estado. El concepto de estado en una solicitud se abordar치 en retos posteriores. Por ahora, piensa en un componente sin estado como uno que puede recibir datos y renderizarlos, pero no administra o rastrea los cambios en esos datos. (Cubriremos la segunda manera de crear un componente React en el siguiente desaf칤o.)

    //* Para crear un componente con funcional, simplemente escribe una funci칩n JavaScript que devuelva ya sea JSX o null. Una cosa importante a tener en cuenta es que React requiere que tu nombre de funci칩n comience con una letra "May칰scula". Aqu칤 hay un ejemplo de un componente funcional sin estado realizado con una funcion Expresado con nombre  ES6 (funci칩n flecha) que asigna una clase HTML en JSX:

    const DemoComponent = () => (
        <div className='customClass' />
    );

    // Despu칠s de ser transpilado, el <div> tendr치 una clase CSS de customClass.

    //Debido a que un componente JSX representa HTML, podr칤as poner varios componentes juntos para crear una p치gina HTML m치s compleja./*游녤 Esta es una de las ventajas clave de la arquitectura de componentes que React proporciona游녣*/. Te permite componer tu interfaz de usuario de muchos componentes separados y aislados. Esto hace m치s f치cil construir y mantener complejas interfaces de usuario.
    //! NOTA: Transpilar es generar a partir de c칩digo en un lenguaje c칩digo en otro lenguaje


}


{
    //! Desafio

    // * El editor de c칩digo tiene una funci칩n llamada MyComponent. Completa esta funci칩n para que retorne un 칰nico elemento div que contiene alguna cadena de texto.

    // ! Nota: El texto se considera hijo del elemento div, por lo que no podr치s utilizar una etiqueta de autocierre Sintaxis de autocierre (/>) u.

    const MyComponent = function () {
        // Cambia el c칩digo debajo de esta l칤nea

        // Cambia el c칩digo encima de esta l칤nea

    }
    {
        //! === Soluci칩n===

        // El editor de c칩digo tiene una funci칩n llamada MyComponent. Completa esta funci칩n para que retorne un 칰nico elemento div que contiene alguna cadena de texto.

        // Nota: El texto se considera hijo del elemento div, por lo que no podr치s utilizar una etiqueta de autocierre.
        // ! Nota: El texto se considera hijo del elemento div, por lo que no podr치s utilizar una etiqueta de autocierre Sintaxis de autocierre (/>) u.
        const MyComponent = function () {
            // Cambia el c칩digo debajo de esta l칤nea
            return (<div>Hola react</div>)

            // Cambia el c칩digo encima de esta l칤nea
        }

    }
}